<template>
  <div>
    <page-container>
      <template slot="content">
        <nc-search @on-search="handleQuery" @on-reset="resetQuery">
          <el-form :model="queryParams" ref="queryForm" size="mini">
            <el-row :gutter="21">
#foreach($column in $columns)
#if($column.isQuery)
#set($dictType=$column.dictType)
#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)})
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#if($column.htmlType == "input" || $column.htmlType == "textarea")
                <el-col :xs="20" :sm="10" :md="10" :lg="8" :xl="6">
                  <el-form-item label-width="100px" label="${comment}" prop="${column.javaField}">
                    <el-input maxlength="2000" v-model="queryParams.${column.javaField}" placeholder="请输入${comment}"/>
                  </el-form-item>
                </el-col>
#elseif($column.htmlType == "select" && "" != $dictType)
                <el-col :xs="20" :sm="10" :md="10" :lg="8" :xl="6">
                  <el-form-item label-width="100px" label="${comment}" prop="${column.javaField}">
                    <nc-select
                        v-model="queryParams"
                        :props-obj="{ value: 'value', label: 'label' }"
                        :item="${column.javaField}Item">
                    </nc-select>
                  </el-form-item>
                </el-col>
#elseif($column.htmlType == "radio")
                <el-col :xs="20" :sm="10" :md="10" :lg="8" :xl="6">
                  <el-form-item label-width="100px" label="${comment}" prop="${column.javaField}">
                    <el-radio-group v-model="queryParams.${column.javaField}">
                      <el-radio
                            v-for="dict in ${column.javaField}Options"
                            :key="dict.value"
                            :label="dict.label"
                      >{{dict.label}}
                      </el-radio>
                    </el-radio-group>
                  </el-form-item>
                </el-col>
#elseif($column.htmlType == "datetime")
#if($column.queryType == 'BETWEEN')
                <el-col :xs="20" :sm="12" :md="12" :lg="10" :xl="8">
                  <el-form-item label-width="100px" label="${comment}">
                      <el-date-picker
                              align="right"
                              style="width: 100%"
                              v-model="${column.javaField}Time"
                              type="datetimerange"
                              range-separator="至"
                              end-placeholder="请选择结束时间"
                              start-placeholder="请选择开始时间"
                              format="yyyy-MM-dd HH:mm:ss"
                              value-format="yyyy-MM-dd HH:mm:ss"
                              :default-time="['00:00:00', '23:59:59']">
                      </el-date-picker>
                  </el-form-item>
                </el-col>
#else
                <el-col :xs="20" :sm="10" :md="10" :lg="8" :xl="6">
                  <el-form-item label-width="100px" label="${comment}" prop="${column.javaField}">
                    <el-date-picker clearable size="small" style="width: 100%"
                                v-model="queryParams.${column.javaField}"
                                type="date"
                                value-format="yyyy-MM-dd"
                                placeholder="选择${comment}">
                    </el-date-picker>
                  </el-form-item>
                </el-col>
#end
#end
#end
#end
            </el-row>
          </el-form>
        </nc-search>

        <nc-btn-list
          :btn-list="btnList"
          @on-btn-click="handleBtnClick">
        </nc-btn-list>

        <nc-table
          style="padding-top: 20px"
          :page="page"
          :total="total"
          :max-height="maxHeight"
          :table-data="tableData"
          :columns="tableColumns"
          @pageChange="pageChange"
          @rowDblclick="rowDblclick"
          @selectionChange="selectionChange"
        />
      </template>
    </page-container>

    <!-- 添加或修改${functionName}对话框 -->
    <el-dialog
            :title="'${functionName}' + opt.label"
            :close-on-click-modal="false"
            :visible.sync="open"
            append-to-body
            width="70%">
        <${businessName}-dialog
        v-if="open"
        :opt="opt"
        :id="currentId"
        @close="handleClose"
        />
    </el-dialog>
  <div>
</template>

<script>
  import {del, delByIds, exportData, listPage} from "@/api/"
  import ${businessName}Json from './js/'
  import ${businessName}Mixin from './js/'
  import {NcBtnList, NcSearch, NcSelect, NcTable, PageContainer} from "@/components/weight/index"
  import ${businessName}Dialog from './'

  export default {
    name: "${BusinessName}List",
    mixins: [ ${businessName}Mixin ],
    components: {
      NcBtnList,
#foreach($column in $columns)
#if($column.isQuery && !$column.superColumn && !$column.pk && $column.htmlType == "select")
      NcSelect,
#break
#end
#end
      NcSearch,
      NcTable,
      PageContainer,
      ${businessName}Dialog
    },
    data() {
      return {
        // 遮罩层
        loading: true,
        // 查询参数
        queryParams: {
#foreach ($column in $columns)
#if($column.isQuery && !$column.superColumn && !$column.pk)
          $column.javaField: null#if($velocityCount != $columns.size()), // $column.columnComment
#end
#end
#end

        },
#foreach($column in $columns)
#if($column.isQuery && !$column.superColumn && !$column.pk && $column.htmlType == "datetime" && $column.queryType == 'BETWEEN')
        ${column.javaField}Time: [], // $column.columnComment
#end
#end
        // 表格操作按钮数据
        btnList: [],
        // 列表总数
        total: 0,
        // 列表分页信息
        page: {
          pageNum: 1,
          pageSize: 10
        },
        // 按钮选项配置
        opt: {
          action: 'add'
        },
        // 当前记录id
        currentId: '',
        // 是否显示弹出层
        open: false,
        // 表格配置信息
        tableColumns: [],
        // 表格最大高度
        maxHeight: window.innerHeight - 320,
        // 表格数据
        tableData: [],
        // 选择内容数据
        selection: []
      }
    },
    created () {
      this.btnList = ${businessName}Json.btnList
      this.tableColumns = ${businessName}Json.tableColumns
      this.getList()
    },
    methods: {
      /** 查询${functionName}列表 */
      getList() {
        this.loading = true;
        const params = Object.assign({}, this.page, this.queryParams#foreach($column in $columns)#if($column.isQuery && !$column.superColumn && !$column.pk && $column.htmlType == "datetime" && $column.queryType == 'BETWEEN')#set($AttrName=$column.javaField.substring(0,1).toUpperCase() + ${column.javaField.substring(1)}), this.addDateRange(this.queryParams, this.${column.javaField}Time, 'begin$AttrName', 'end$AttrName')#end#end)
        listPage(params).then(response => {
          this.tableData = response.data.data || []
          this.total = response.data.total;
          this.loading = false;
        });
      },
      /** 表格上方按钮点击 */
      handleBtnClick(opt) {
        this.opt = opt
        const process = {
          add: this.handleAdd,
          del: () => this.handleDelete(opt),
          export: () => this.handleExport(opt)
        }
        process[opt.action].call(this)
      },
      /** 分页事件 */
      pageChange(page) {
        this.page = Object.assign({}, page)
        this.getList()
      },
      /** 双击事件 */
      rowDblclick(row) {
        if (this.hasPermission(['${moduleName}:${className}:updById'])) {
          this.currentId = row.${pkColumn.javaField}
          this.opt = { action: 'info', label: '详情' }
          this.open = true
        }
      },
      /** 弹框关闭 */
      handleClose () {
        this.open = false
        this.getList()
      },
      /** 选择项变化事件 */
      selectionChange(selection) {
        this.selection = selection
      },
      /** 搜索按钮操作 */
      handleQuery() {
        this.page.pageNum = 1;
        this.getList();
      },
      /** 重置按钮操作 */
      resetQuery() {
        this.$refs.queryForm.resetFields()
        this.handleQuery();
      },
      /** 新增按钮操作 */
      handleAdd() {
        this.currentId = ''
        this.open = true;
      },
      /** 删除按钮操作 */
      handleDelete(opt) {
        if (this.selection.length) {
          const [ selectionData ] = this.selection
          const ids = this.selection.map(item => item.${pkColumn.javaField})
          const id = selectionData.${pkColumn.javaField}
          const fd = new FormData()
          ids.length > 1 ? fd.append('ids', ids.join(',')) : fd.append('id', id)
          this.$confirm("是否确认删除", "警告", {
            confirmButtonText: "确定",
            cancelButtonText: "取消",
            type: "warning"
          }).then(function () {
            return ids.length > 1 ? delByIds(fd) : del(fd)
          }).then((res) => {
            this.operationFeedback(res, opt.label)
            this.getList();
          })
        } else {
          this.$alert('选择记录才能进行' + opt.label + '，请选择', '提示', {
            confirmButtonText: '确定',
            type: 'warning'
          })
        }
      },
      /** 导出按钮操作 */
      handleExport () {
          const params = Object.assign({}, this.queryParams)
          this.$confirm('是否确认导出所有${functionName}数据项?', "警告", {
              confirmButtonText: "确定",
              cancelButtonText: "取消",
              type: "warning"
          }).then(() => {
            exportData(params).then(res => {
              const { code } = res
              if (code && code !== 200) {
                  return ''
              }
              const fileName = `${functionName}列表_${this.formatDate()}.xlsx`
              this.streamFileDownload(res, fileName)
          })
        })
      }
    }
  }
</script>

<style scoped>
</style>
